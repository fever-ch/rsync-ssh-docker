#!/usr/bin/perl
# Name: xrrsync
# Purpose: 
# Author: Raphael P. Barazzutti <raphael@barazzutti.net>

use strict;
use Cwd qw(getcwd);


# the lines of between comments BEGIN-RRSYNC-SNIPPET and END-RRSYNC-SNIPPET
# are copied from rrsync (authors: Joe Smith and Wayne Davison)
# 
# BEGIN-RRSYNC-SNIPPET
our $only = '';
my @ARGV_ORIG = @ARGV;

while (@ARGV && $ARGV[0] =~ /^-([rw])o$/) {
    my $r_or_w = $1;
    if ($only && $only ne $r_or_w) {
	die "$0: the -ro and -wo options conflict.\n";
    }
    $only = $r_or_w;
    shift;
}

our $subdir = shift;

sub check_path {
    my($tgt)=@_;
    $_ = $tgt;
    if ($subdir ne '/') {
        # Validate args to ensure they don't try to leave our restricted dir.
        s{//+}{/}g;
        s{^/}{};
        s{^$}{.};
        die "$0: do not use .. in any path!\n" if m{(^|/)\\?\.\\?\.(\\?/|$)};
    }
    return $_;
}
# END-RRSYNC-SNIPPET

chdir($subdir);


use constant RRSYNC => '/usr/bin/rrsync';

my $cmd=$ENV{SSH_ORIGINAL_COMMAND};

if($cmd =~ /^([\w\-\.]+)(?:|\s(.*))$/){
    my $prog_name = $1;
    my $prog_args = $2;
    
    if($prog_name eq "test"){
        if($prog_args =~ /^-e\s+(.+)$/){
            exec(('test', "-e", check_path($1)));
        }        
    }
    if($prog_name eq "df"){
        if($prog_args =~ /^-T\s+(.+)$/){
            exec(('df', "-T", check_path($1)));
        }        
    }
    elsif($prog_name eq "rsync"){
        exec(RRSYNC, @ARGV_ORIG);
    }
    
}

die "This ssh servers only allows a limited set of commands - Hanging up\n"
